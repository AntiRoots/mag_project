import pandas as pd
import matplotlib.pyplot as plt
import os

# Logi k√§ivituse asukoht
print(f"üìÇ T√∂√∂tan kaustas: {os.getcwd()}")

# M√§√§ra kaustad
DATA_PATH = "data/kohtulahendid.csv"
OUTPUT_DIR = "docs"  # Graafiku v√§ljundkaust
CHART_PATH = os.path.join(OUTPUT_DIR, "chart.png")

# Kontrolli, kas andmefail eksisteerib
if not os.path.exists(DATA_PATH):
    print(f"‚ùå Viga: Andmefaili ei leitud ({DATA_PATH})!")
    exit(1)
else:
    print(f"‚úÖ Andmefail leitud: {DATA_PATH}")

# Loo v√§ljundi kaust, kui see puudub
os.makedirs(OUTPUT_DIR, exist_ok=True)

# Laadi andmed
df = pd.read_csv(DATA_PATH, delimiter=";", encoding="utf-8")
print(f"üìä Andmed laetud, ridasid: {len(df)}")

# Eemalda t√ºhjad kuup√§eva lahtrid enne teisendamist
df = df[df["Lahendi kp"].notna()]

# Muuda kuup√§evad datetime formaati
df["Lahendi kp"] = pd.to_datetime(df["Lahendi kp"], dayfirst=True, errors='coerce')

# Eemalda read, kus kuup√§evad ei √µnnestunud teisendada
df = df.dropna(subset=["Lahendi kp"])

# Kontrolli, kas on √ºldse andmeid, mida joonistada
if df.empty:
    print("‚ö†Ô∏è  Viga: Andmefail on t√ºhi v√µi ei sisalda sobivaid kuup√§evi!")
    exit(1)

# Loenda kohtulahendite arv kuude kaupa
df["Month"] = df["Lahendi kp"].dt.to_period("M")
cases_per_month = df.groupby("Month").size()

# Joonista graafik
plt.figure(figsize=(10, 5))
cases_per_month.plot(kind="bar", color="skyblue")
plt.xlabel("Kuud")
plt.ylabel("Kohtulahendite arv")
plt.title("Kohtulahendite arv ajas")
plt.xticks(rotation=45)
plt.tight_layout()

# Salvesta pilt
plt.savefig(CHART_PATH, dpi=300)
plt.close()  # Vabastab m√§lu
print(f"‚úÖ Graafik genereeritud: {CHART_PATH}")

# Kontrolli, kas graafik loodi
if os.path.exists(CHART_PATH):
    print(f"‚úÖ Graafik on olemas: {CHART_PATH}")
else:
    print("‚ùå Viga: Graafiku faili EI looda!")
    exit(1)
